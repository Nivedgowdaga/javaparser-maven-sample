name: Build and Deploy Java Application

on:
  push:
    branches:
      - master  # Trigger the workflow on pushes to the main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up JDK
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: 17
        distribution: 'temurin'

    # Step 3: Cache Maven dependencies
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    # Step 4: Build the application
    - name: Build with Maven
      run: mvn clean package

    # Step 5: Run tests
    - name: Run tests
      run: mvn test

    # Step 6: Upload build artifact
    - name: Upload JAR artifact
      uses: actions/upload-artifact@v3
      with:
        name: java-app
        path: target/*.jar  # Adjust the path if needed

  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
    # Step 1: Download build artifact
    - name: Download JAR artifact
      uses: actions/download-artifact@v3
      with:
        name: java-app

    # Step 2: Deploy to remote server
    - name: Deploy to Server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        password: ${{ secrets.DEPLOY_PASSWORD }}  # Or use private-key for better security
        port: 22
        timeout: 1h
        script: |
          # Transfer the JAR file to the remote server
          scp java-app.jar ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }}:/path/to/deploy/

          # Restart the application or service
          ssh ${{ secrets.DEPLOY_USER }}@${{ secrets.DEPLOY_HOST }} "sudo systemctl restart my-java-app"
